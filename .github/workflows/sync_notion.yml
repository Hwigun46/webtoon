name: Sync GitHub Issues to Notion (Spring)

on:
  issues:
    types: [opened, closed]

  pull_request:
    types: [opened]  # 🎯 PR이 생성될 때 Notion 상태를 '리뷰 대기'로 변경

jobs:
  sync_issue:
    if: github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Convert Issue Body to JSON
        run: |
          echo '${{ github.event.issue.body }}' | jq -Rs '.' | tr -d '"' > issue_body.json  # 🔹 JSON에서 불필요한 따옴표 제거

      - name: Send Issue to Notion
        run: |
          ISSUE_BODY=$(cat issue_body.json)

          # 🛠 GitHub Issue 본문을 개행 단위로 분리하여 Notion 블록(children)으로 변환
          NOTION_CHILDREN=$(jq -n --arg text "$ISSUE_BODY" '
            ($text | split("\n") | map({
              object: "block",
              type: "paragraph",
              paragraph: {
                rich_text: [{ type: "text", text: { content: . } }]
              }
            }))
          ')

          response=$(jq -n \
          --arg database_id "${{ secrets.NOTION_DATABASE_ID }}" \
          --arg title "${{ github.event.issue.title }}" \
          --arg url "${{ github.event.issue.html_url }}" \
          --arg status "작업 중" \
          --arg team "SPRING" \
          --arg assignee "${{ github.event.issue.user.login }}" \
          --arg issue_number "${{ github.event.issue.number }}" \
          '{
            parent: { database_id: $database_id },
            properties: {
              "제목": { title: [{ text: { content: $title } }] },
              "URL": { url: $url },
              "상태": { status: { name: $status } },
              "팀": { select: { name: $team } },
              "담당자": { rich_text: [{ type: "text", text: { content: $assignee } }] },
              "이슈 번호": { number: ($issue_number | tonumber) }
            },
            children: '"$NOTION_CHILDREN"'
          }' | tee notion_response.json | curl -X POST "https://api.notion.com/v1/pages" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data @-)

          echo "Notion API Response: $response"

  update_issue_status:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Find Notion Page for the Issue
        run: |
          QUERY_RESULT=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "filter": {
              "property": "이슈 번호",
              "number": {
                "equals": ${{ github.event.pull_request.number }}
              }
            }
          }')

          page_id=$(echo "$QUERY_RESULT" | jq -r '.results[0].id')

          if [[ "$page_id" != "null" && "$page_id" != "" ]]; then
            echo "✅ Notion Page ID 찾음: $page_id"
            echo "PAGE_ID=$page_id" >> $GITHUB_ENV
          else
            echo "❌ Notion 페이지를 찾을 수 없습니다."
            exit 1
          fi

      - name: Update Notion Page Status to "리뷰 대기"
        run: |
          curl -X PATCH "https://api.notion.com/v1/pages/${{ env.PAGE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "properties": {
              "상태": { "status": { "name": "리뷰 대기" } }
            }
          }'