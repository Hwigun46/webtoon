name: Sync GitHub Issues to Notion (Spring)

on:
  issues:
    types: [opened, closed]
  pull_request:
    types: [opened, closed]

jobs:
  update_issue_status:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Determine Notion Status Update
        id: determine_status
        run: |
          if [[ "${{ github.event_name }}" == "issues" && "${{ github.event.action }}" == "opened" ]]; then
            echo "STATUS=작업 중" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "opened" ]]; then
            echo "STATUS=리뷰 대기" >> $GITHUB_ENV
          elif [[ ("${{ github.event_name }}" == "issues" && "${{ github.event.action }}" == "closed") || ("${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "closed") ]]; then
            echo "STATUS=완료" >> $GITHUB_ENV
          else
            echo "❌ 해당 이벤트는 처리할 필요 없음."
            exit 0
          fi

      - name: Find Notion Page for the Issue
        run: |
          # Issue 번호 설정
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            ISSUE_NUMBER=${{ github.event.issue.number }}
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            ISSUE_NUMBER=${{ github.event.pull_request.issue_url##*/ }}  # PR과 연결된 Issue 번호 가져오기
          fi

          echo "🔍 Searching for Notion Page with Issue Number: $ISSUE_NUMBER"

          # Notion 데이터베이스에서 이슈 번호로 검색
          QUERY_RESULT=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "filter": {
              "property": "이슈 번호",
              "number": {
                "equals": '"$ISSUE_NUMBER"'
              }
            }
          }')

          page_id=$(echo "$QUERY_RESULT" | jq -r '.results[0].id')

          if [[ "$page_id" != "null" && "$page_id" != "" ]]; then
            echo "✅ Notion Page ID 찾음: $page_id"
            echo "PAGE_ID=$page_id" >> $GITHUB_ENV
          else
            echo "❌ Notion 페이지를 찾을 수 없습니다."
            exit 1
          fi

      - name: Update Notion Page Status
        run: |
          curl -X PATCH "https://api.notion.com/v1/pages/${{ env.PAGE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "properties": {
              "상태": { "status": { "name": "'"${{ env.STATUS }}"'" } }
            }
          }'

          echo "✅ Notion 상태가 '${{ env.STATUS }}'로 업데이트됨."